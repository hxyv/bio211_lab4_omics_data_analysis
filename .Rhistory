labs(x = 'log2(FC)', y = '-log10(FDR)') +
theme_classic()
pt
p <- p + scale_color_manual(values = c('up' = 'red',                                          'normal' = 'grey',
'down' = 'blue'))
# Add cut-off lines & export image
xline <- c(-log2(2), log2(2))
p <- p + geom_vline(xintercept = xline, lty = 2, size = I(0.2), color = 'grey11')
yline <- -log(0.05, 10)
p <- p + geom_hline(yintercept = yline, lty = 2, size = I(0.2), color = 'grey11')
p <- p + theme_bw() + theme(panel.background = element_rect(color = 'black'
size = 1,
p <- p + theme_bw() + theme(panel.background = element_rect(color = 'black',
size = 1,
fill = 'white'),
panel.grid = element_blank())
pdf <- ('deg2_volcano.pdf')
print(p)
getwd
getwd()
?dev.off
ggsave(pdf, filename = 'Graph/deg2_volcano.pdf')
p <- p + theme_bw() +
theme(panel.background = element_rect(color = 'black',
size = 1,
fill = 'white'),
panel.grid = element_blank())
pdf('deg2_volcano.pdf')
pdf('Graph/deg2_volcano.pdf')
print(p)
print(p)
dev.off()
print(p)
pdf('Graph/deg2_volcano.pdf')
# [1] Data preparation
prot <- read.csv('Data/proteomics data analysis.csv')
prot
# [2] Construct a volcano plot
library(ggplot2)
?I()
p <- qplot(x = DEG2$logFC, y = -log10(DEG2$FDR),
xlab='log2(FC)', ylab = '-log10(FDR)',
size = I(0.7), colour = significant)
p
p <- qplot(x = DEG2$logFC, y = -log10(DEG2$FDR),
xlab='log2(FC)', ylab = '-log10(FDR)',
size = I(0.7), colour = significant)
p
p <- qplot(x = DEG2$logFC, y = -log10(DEG2$FDR),
xlab='log2(FC)', ylab = '-log10(FDR)',
size = I(0.7), colour = significant)
p
View(p)
p <- p + scale_color_manual(values = c('up' = 'red',                                          'normal' = 'grey',
'down' = 'blue'))
p
print(p)
xline <- c(-log2(2), log2(2))
p <- p + geom_vline(xintercept = xline, lty = 2, size = I(0.2), color = 'grey11')
yline <- -log(0.05, 10)
p <- p + geom_hline(yintercept = yline, lty = 2, size = I(0.2), color = 'grey11')
p <- p + theme_bw() +
theme(panel.background = element_rect(color = 'black',
size = 1,
fill = 'white'),
panel.grid = element_blank())
pdf('Graph/deg2_volcano.pdf')
print(p)
print(p)
print(pt)
library(cowplot)
library(patchwork)
library(ggplotify)
library(ggplot2)
loc_up <- intersect(which(DEG2$FDR < 0.05), which(DEG2$logFC >= 1))
loc_down <- intersect(which(DEG2$FDR < 0.05), which(DEG2$logFC < (-1)))
significant <- rep('normal', times = nrow(DEG2))
significant[loc_up] <- 'up'
significant[loc_down] <- 'down'
significant <- factor(ignificant, levels = c('up', 'down', 'normal'))
loc_up <- intersect(which(DEG2$FDR < 0.05), which(DEG2$logFC >= 1))
loc_down <- intersect(which(DEG2$FDR < 0.05), which(DEG2$logFC < (-1)))
significant <- rep('normal', times = nrow(DEG2))
significant[loc_up] <- 'up'
significant[loc_down] <- 'down'
significant <- factor(significant, levels = c('up', 'down', 'normal'))
p <- qplot(x = DEG2$logFC, y = -log10(DEG2$FDR),
xlab='log2(FC)', ylab = '-log10(FDR)',
size = I(0.7), colour = significant)
p <- p + scale_color_manual(values = c('up' = 'red',                                          'normal' = 'grey',
'down' = 'blue'))
p
xline <- c(-log2(2), log2(2))
p <- p + geom_vline(xintercept = xline, lty = 2, size = I(0.2), color = 'grey11')
yline <- -log(0.05, 10)
p <- p + geom_hline(yintercept = yline, lty = 2, size = I(0.2), color = 'grey11')
p <- p + theme_bw() +
theme(panel.background = element_rect(color = 'black',
size = 1,
fill = 'white'),
panel.grid = element_blank())
pdf('Graph/deg2_volcano.pdf')
print(p)
?with(0)
prot2 <- prot[, c('Gene Name', 'Fold Change', 'p-value')]
prot2 <- prot[c('Gene Name', 'Fold Change', 'p-value'),]
prot2
prot2 <- prot[, c('Gene Name', 'Fold Change', 'p-value')]
summary(prot)
dim(prot)
row.names(prot) <- prot[, 1]
# [2] Construct a volcano plot
library(ggplot2)
prot
# [1] Data preparation
prot <- read.csv('Data/proteomics data analysis.csv')
dim(prot)
head(prot)
prot2 <- colnames(prot[, 1])
prot
prot$logFC <- log(prot$Fold.Change)
prot$logp <- -log10(prot$p.value)
dim(prot)
prot[, 20]
prot[, 19]
ggplot(prot) +
geom_dotplot(aes(x = logFC, y = logp))
qplot(x = prot$logFC, y = prot$logp, xlab = 'log2(FC)', ylab = '-log10(p-value)')
qplot(x = prot$logFC, y = prot$logp, xlab = 'log2(FC)', ylab = '-log10(p-value)',
size = I(0.7))
p <- qplot(x = prot$logFC, y = prot$logp, xlab = 'log2(FC)', ylab = '-log10(p-value)',
size = I(0.7))
p
pdf('Data/test.pdf')
print(p)
pdf('Graph/test.pdf')
pdf('Graph/test.pdf')
log(1.2)
up <- intersect(which(prot$p.value < 0.05), which(prot$Fold.Change >= 1.2))
down <- intersect(which(prot$p.value < 0.05), which(prot$Fold.Change < 1 / 1.2))
significant <- rep('normal', tiems = nrow(prot))
significant[up] <- 'up'
significant[dowm] <- 'down'
significant[down] <- 'down'
significant <- factor(significant, levels=c('up', 'down', 'normal'))
p <- qplot(x = prot$logFC, y = prot$logp, xlab = 'log2(FC)', ylab = '-log10(p-value)',
size = I(0.7), colour = significant)
p <- qplot(x = prot$logFC, y = prot$logp, xlab = 'log2(FC)', ylab = '-log10(p-value)',
size = I(0.7), colour = significant)
?qplot
# [2] Construct a volcano plot
library(ggplot2)
p <- qplot(x = prot$logFC, y = prot$logp, xlab = 'log2(FC)', ylab = '-log10(p-value)',
size = I(0.7), colour = significant)
p <- p + scale_color_manual(values = c('up' = 'red',
'normal' = 'grey',
'down' = 'blue'))
xline <- c(-log2(2), log2(2))
p <- p + geom_vline(xintercept = xline, lty = 2, size = I(0.2), color = 'grey11')
yline <- -log(0.05, 10)
p <- p + geom_hline(yintercept = yline, lty = 2, size = I(0.2), color = 'grey11')
p <- p + theme_bw() +
theme(panel.background = element_rect(color = 'black',
size = 1,
fill = 'white'),
panel.grid = element_blank())
pdf('Graph/proteomics.pdf')
print(p)
library(cowplot)
library(patchwork)
library(ggplotify)
library(ggplot2)
xline <- c(-log2(2), log2(2))
p <- p + geom_vline(xintercept = xline, lty = 2, size = I(0.2), color = 'grey11')
yline <- -log(0.05, 10)
p <- p + geom_hline(yintercept = yline, lty = 2, size = I(0.2), color = 'grey11')
p <- p + theme_bw() +
theme(panel.background = element_rect(color = 'black',
size = 1,
fill = 'white'),
panel.grid = element_blank())
pdf('Graph/proteomics.pdf')
print(p)
p <- qplot(x = prot$logFC, y = prot$logp, xlab = 'log2(FC)', ylab = '-log10(p-value)',
size = I(0.7), colour = significant)
library(cowplot)
library(patchwork)
library(ggplotify)
library(ggplot2)
p <- qplot(x = prot$logFC, y = prot$logp, xlab = 'log2(FC)', ylab = '-log10(p-value)',
size = I(0.7), colour = significant)
p <- p + scale_color_manual(values = c('up' = 'red',
'normal' = 'grey',
'down' = 'blue'))
## Add cut-off lines & export image
xline <- c(-log2(2), log2(2))
p <- p + geom_vline(xintercept = xline, lty = 2, size = I(0.2), color = 'grey11')
yline <- -log(0.05, 10)
p <- p + geom_hline(yintercept = yline, lty = 2, size = I(0.2), color = 'grey11')
p <- p + theme_bw() +
theme(panel.background = element_rect(color = 'black',
size = 1,
fill = 'white'),
panel.grid = element_blank())
pdf('Graph/proteomics.pdf')
print(p)
rlang::last_error(
)
p <- qplot(x = prot$logFC, y = prot$logp, xlab = 'log2(FC)', ylab = '-log10(p-value)',
size = I(0.7), colour = significant)
p <- p + scale_color_manual(values = c('up' = 'red',
'normal' = 'grey',
'down' = 'blue'))
p
p <- qplot(x = prot$logFC, y = prot$logp, xlab = 'log2(FC)', ylab = '-log10(p-value)',
size = I(0.7), colour = significant)
p
p <- qplot(x = prot$logFC, y = prot$logp, xlab = 'log2(FC)', ylab = '-log10(p-value)',
size = I(0.7), colour = significant)
pdf('Graph/proteomics.pdf')
print(p)
p <- qplot(x = prot$logFC, y = prot$logp, xlab = 'log2(FC)', ylab = '-log10(p-value)',
size = I(0.7), colour = significant)
p <- p + scale_color_manual(values = c('up' = 'red',
'normal' = 'grey',
'down' = 'blue'))
library(cowplot)
library(patchwork)
library(ggplotify)
library(ggplot2)
p <- qplot(x = prot$logFC, y = prot$logp, xlab = 'log2(FC)', ylab = '-log10(p-value)',
size = I(0.7), colour = significant)
p
significant
significant <- rep('normal', tiems = ncol(prot))
significant[up] <- 'up'
significant[down] <- 'down'
significant <- factor(significant, levels=c('up', 'down', 'normal'))
significant
ncol(prot)
nrow(prot)
significant <- rep('normal', tiems = nrow(prot))
significant[up] <- 'up'
significant[down] <- 'down'
significant <- factor(significant, levels=c('up', 'down', 'normal'))
significant
dim(prot)
significant <- rep('normal', tiems = nrow(prot))
significant
nrow(prot)
dim(prot)
up <- intersect(which(prot$p.value < 0.05), which(prot$Fold.Change >= 1.2))
up
loc_up <- intersect(which(DEG2$FDR < 0.05), which(DEG2$logFC >= 1))
loc_up
up
down <- intersect(which(prot$p.value < 0.05), which(prot$Fold.Change < 1 / 1.2))
down
# [1] Data preparation
prot <- read.csv('Data/proteomics data analysis.csv')
prot$logFC <- log(prot$Fold.Change)
prot$logp <- -log10(prot$p.value)
View(prot)
up <- intersect(which(prot$p.value < 0.05), which(prot$Fold.Change >= 1.2))
up
prot$Fold.Change
down <- intersect(which(prot$p.value < 0.05), which(prot$Fold.Change < 1 / 1.2))
significant <- rep('normal', tiems = nrow(prot))
significant[up] <- 'up'
significant[down] <- 'down'
significant
p <- qplot(x = prot$logFC, y = prot$logp, xlab = 'log2(FC)', ylab = '-log10(p-value)',
size = I(0.7), colour = significant)
p
loc_up <- intersect(which(DEG2$FDR < 0.05), which(DEG2$logFC >= 1))
loc_down <- intersect(which(DEG2$FDR < 0.05), which(DEG2$logFC < (-1)))
significant <- rep('normal', times = nrow(DEG2))
significant[loc_up] <- 'up'
significant[loc_down] <- 'down'
significant <- factor(significant, levels = c('up', 'down', 'normal'))
significant
up <- intersect(which(prot$p.value < 0.05), which(prot$Fold.Change >= 1.2))
down <- intersect(which(prot$p.value < 0.05), which(prot$Fold.Change < 1 / 1.2))
significant <- rep('normal', times = nrow(prot))
significant[up] <- 'up'
significant[down] <- 'down'
significant <- factor(significant, levels=c('up', 'down', 'normal'))
significant
p <- qplot(x = prot$logFC, y = prot$logp, xlab = 'log2(FC)', ylab = '-log10(p-value)',
size = I(0.7), colour = significant)
p <- p + scale_color_manual(values = c('up' = 'red',
'normal' = 'grey',
'down' = 'blue'))
xline <- c(-log2(2), log2(2))
p <- p + geom_vline(xintercept = xline, lty = 2, size = I(0.2), color = 'grey11')
yline <- -log(0.05, 10)
p <- p + geom_hline(yintercept = yline, lty = 2, size = I(0.2), color = 'grey11')
p <- p + theme_bw() +
theme(panel.background = element_rect(color = 'black',
size = 1,
fill = 'white'),
panel.grid = element_blank())
pdf('Graph/proteomics.pdf')
print(p)
dev.off()
loc_up <- intersect(which(DEG2$FDR < 0.05), which(DEG2$logFC >= 1))
loc_down <- intersect(which(DEG2$FDR < 0.05), which(DEG2$logFC < (-1)))
significant <- rep('normal', times = nrow(DEG2))
significant[loc_up] <- 'up'
significant[loc_down] <- 'down'
significant <- factor(significant, levels = c('up', 'down', 'normal'))
p <- qplot(x = DEG2$logFC, y = -log10(DEG2$FDR),
xlab='log2(FC)', ylab = '-log10(FDR)',
size = I(0.7), colour = significant)
p <- p + scale_color_manual(values = c('up' = 'red',
'normal' = 'grey',
'down' = 'blue'))
# Add cut-off lines & export image
xline <- c(-log2(2), log2(2))
p <- p + geom_vline(xintercept = xline, lty = 2, size = I(0.2), color = 'grey11')
yline <- -log(0.05, 10)
p <- p + geom_hline(yintercept = yline, lty = 2, size = I(0.2), color = 'grey11')
p <- p + theme_bw() +
theme(panel.background = element_rect(color = 'black',
size = 1,
fill = 'white'),
panel.grid = element_blank())
pdf('Graph/deg2_volcano.pdf')
print(p)
dev.off()
up <- intersect(which(prot$p.value < 0.05), which(prot$Fold.Change >= 1.2))
down <- intersect(which(prot$p.value < 0.05), which(prot$Fold.Change < 1 / 1.2))
significant <- rep('normal', times = nrow(prot))
significant[up] <- 'up'
significant[down] <- 'down'
significant <- factor(significant, levels=c('up', 'down', 'normal'))
p <- qplot(x = prot$logFC, y = prot$logp, xlab = 'log2(FC)', ylab = '-log10(p-value)',
size = I(0.7), colour = significant)
p <- p + scale_color_manual(values = c('up' = 'red',
'normal' = 'grey',
'down' = 'blue'))
## Add cut-off lines & export image
xline <- c(-log2(1.2), log2(1.2))
p <- p + geom_vline(xintercept = xline, lty = 2, size = I(0.2), color = 'grey11')
yline <- -log(0.05, 10)
p <- p + geom_hline(yintercept = yline, lty = 2, size = I(0.2), color = 'grey11')
p <- p + theme_bw() +
theme(panel.background = element_rect(color = 'black',
size = 1,
fill = 'white'),
panel.grid = element_blank())
pdf('Graph/proteomics.pdf')
up <- intersect(which(prot$p.value < 0.05), which(prot$Fold.Change >= 1.2))
down <- intersect(which(prot$p.value < 0.05), which(prot$Fold.Change < 1 / 1.2))
significant <- rep('normal', times = nrow(prot))
significant[up] <- 'up'
significant[down] <- 'down'
significant <- factor(significant, levels=c('up', 'down', 'normal'))
p <- qplot(x = prot$logFC, y = prot$logp, xlab = 'log2(FC)', ylab = '-log10(p-value)',
size = I(0.7), colour = significant)
p <- p + scale_color_manual(values = c('up' = 'red',
'normal' = 'grey',
'down' = 'blue'))
## Add cut-off lines & export image
xline <- c(-log2(1.2), log2(1.2))
p <- p + geom_vline(xintercept = xline, lty = 2, size = I(0.2), color = 'grey11')
yline <- -log(0.05, 10)
p <- p + geom_hline(yintercept = yline, lty = 2, size = I(0.2), color = 'grey11')
p <- p + theme_bw() +
theme(panel.background = element_rect(color = 'black',
size = 1,
fill = 'white'),
panel.grid = element_blank())
pdf('Graph/proteomics.pdf')
print(p)
dev.off()
up <- intersect(which(prot$p.value < 0.05), which(prot$Fold.Change >= 1.2))
down <- intersect(which(prot$p.value < 0.05), which(prot$Fold.Change <= 1 / 1.2))
significant <- rep('normal', times = nrow(prot))
significant[up] <- 'up'
significant[down] <- 'down'
significant <- factor(significant, levels=c('up', 'down', 'normal'))
p <- qplot(x = prot$logFC, y = prot$logp, xlab = 'log2(FC)', ylab = '-log10(p-value)',
size = I(0.7), colour = significant)
p <- p + scale_color_manual(values = c('up' = 'red',
'normal' = 'grey',
'down' = 'blue'))
## Add cut-off lines & export image
xline <- c(-log2(1.2), log2(1.2))
p <- p + geom_vline(xintercept = xline, lty = 2, size = I(0.2), color = 'grey11')
yline <- -log(0.05, 10)
p <- p + geom_hline(yintercept = yline, lty = 2, size = I(0.2), color = 'grey11')
p <- p + theme_bw() +
theme(panel.background = element_rect(color = 'black',
size = 1,
fill = 'white'),
panel.grid = element_blank())
pdf('Graph/proteomics.pdf')
print(p)
dev.off()
up <- intersect(which(prot$p.value < 0.05), which(prot$Fold.Change >= 1.2))
down <- intersect(which(prot$p.value < 0.05), which(prot$Fold.Change <= 1 / 1.2))
significant <- rep('normal', times = nrow(prot))
significant[up] <- 'up'
significant[down] <- 'down'
significant <- factor(significant, levels=c('up', 'down', 'normal'))
p <- qplot(x = prot$logFC, y = prot$logp, xlab = 'log2(FC)', ylab = '-log10(p-value)',
size = I(0.7), colour = significant)
p <- p + scale_color_manual(values = c('up' = 'red',
'normal' = 'grey',
'down' = 'blue'))
## Add cut-off lines & export image
xline <- c(-log2(1 / 1.2), log2(1 / 1.2))
p <- p + geom_vline(xintercept = xline, lty = 2, size = I(0.2), color = 'grey11')
yline <- -log(0.05, 10)
p <- p + geom_hline(yintercept = yline, lty = 2, size = I(0.2), color = 'grey11')
p <- p + theme_bw() +
theme(panel.background = element_rect(color = 'black',
size = 1,
fill = 'white'),
panel.grid = element_blank())
pdf('Graph/proteomics.pdf')
print(p)
dev.off()
log(1.2)
log(1 / 1.2)
library(cowplot)
library(patchwork)
library(ggplotify)
library(ggplot2)
up <- intersect(which(prot$p.value < 0.05), which(prot$Fold.Change >= 1.2))
down <- intersect(which(prot$p.value < 0.05), which(prot$Fold.Change <= 1 / 1.2))
significant <- rep('normal', times = nrow(prot))
significant[up] <- 'up'
significant[down] <- 'down'
significant <- factor(significant, levels=c('up', 'down', 'normal'))
p <- qplot(x = prot$logFC, y = prot$logp, xlab = 'log2(FC)', ylab = '-log10(p-value)',
size = I(0.7), colour = significant)
p <- p + scale_color_manual(values = c('up' = 'red',
'normal' = 'grey',
'down' = 'blue'))
## Add cut-off lines & export image
xline <- c(-log2(1.2), log2(1.2))
p <- p + geom_vline(xintercept = xline, lty = 2, size = I(0.2), color = 'grey11')
yline <- -log(0.05, 10)
p <- p + geom_hline(yintercept = yline, lty = 2, size = I(0.2), color = 'grey11')
p <- p + theme_bw() +
theme(panel.background = element_rect(color = 'black',
size = 1,
fill = 'white'),
panel.grid = element_blank())
pdf('Graph/proteomics.pdf')
print(p)
dev.off()
-log2(1.2)
# [1] Data preparation
prot <- read.csv('Data/proteomics data analysis.csv')
dim(prot)
prot$logFC <- log2(prot$Fold.Change)
prot$logp <- -log10(prot$p.value)
# [2] Construct a volcano plot
library(cowplot)
library(patchwork)
library(ggplotify)
library(ggplot2)
up <- intersect(which(prot$p.value < 0.05), which(prot$Fold.Change >= 1.2))
down <- intersect(which(prot$p.value < 0.05), which(prot$Fold.Change <= 1 / 1.2))
significant <- rep('normal', times = nrow(prot))
significant[up] <- 'up'
significant[down] <- 'down'
significant <- factor(significant, levels=c('up', 'down', 'normal'))
p <- qplot(x = prot$logFC, y = prot$logp, xlab = 'log2(FC)', ylab = '-log10(p-value)',
size = I(0.7), colour = significant)
p <- p + scale_color_manual(values = c('up' = 'red',
'normal' = 'grey',
'down' = 'blue'))
## Add cut-off lines & export image
xline <- c(-log2(1.2), log2(1.2))
p <- p + geom_vline(xintercept = xline, lty = 2, size = I(0.2), color = 'grey11')
yline <- -log(0.05, 10)
p <- p + geom_hline(yintercept = yline, lty = 2, size = I(0.2), color = 'grey11')
p <- p + theme_bw() +
theme(panel.background = element_rect(color = 'black',
size = 1,
fill = 'white'),
panel.grid = element_blank())
pdf('Graph/proteomics.pdf')
print(p)
dev.off()
log(0.05, 10)
up <- intersect(which(prot$p.value < 0.05), which(prot$Fold.Change >= 2))
down <- intersect(which(prot$p.value < 0.05), which(prot$Fold.Change <= 1 / 2))
significant <- rep('normal', times = nrow(prot))
significant[up] <- 'up'
significant[down] <- 'down'
significant <- factor(significant, levels=c('up', 'down', 'normal'))
p <- qplot(x = prot$logFC, y = prot$logp, xlab = 'log2(FC)', ylab = '-log10(p-value)',
size = I(0.7), colour = significant)
p <- p + scale_color_manual(values = c('up' = 'red',
'normal' = 'grey',
'down' = 'blue'))
## Add cut-off lines & export image
xline <- c(-log2(2), log2(2))
p <- p + geom_vline(xintercept = xline, lty = 2, size = I(0.2), color = 'grey11')
yline <- -log(0.05, 10)
p <- p + geom_hline(yintercept = yline, lty = 2, size = I(0.2), color = 'grey11')
p <- p + theme_bw() +
theme(panel.background = element_rect(color = 'black',
size = 1,
fill = 'white'),
panel.grid = element_blank())
pdf('Graph/proteomics.pdf')
